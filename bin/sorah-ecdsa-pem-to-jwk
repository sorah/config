#!/usr/bin/env ruby
require 'base64'
require 'openssl'
require 'json'

data = ARGF.read.yield_self{ |_| _.start_with?('-----') ? _ : _.unpack1('m*') }
key = OpenSSL::PKey::EC.new(data, '')
key.private_key = nil

crv = case key.group.curve_name
      when 'prime256v1'
        'P-256'
      when 'secp384r1'
        'P-384'
      when 'secp521r1'
        'P-521'
      else
        raise "unknown curve"
      end

# https://github.com/unixcharles/acme-client/blob/master/lib/acme/client/jwk/ecdsa.rb
hex = key.public_key.to_bn.to_s(16)
data_len = hex.length - 2
hex_x = hex[2, data_len / 2]
hex_y = hex[2 + data_len / 2, data_len / 2]

# https://cs.github.com/kubernetes/kubernetes/blob/4dba52cdf4684ad47ee55e5bf251d742f39f11a3/pkg/serviceaccount/jwt.go#L98
kid = Base64.urlsafe_encode64(OpenSSL::Digest.digest('sha256', key.to_der)).gsub(/=+$/,'')

jwk = {
  use: "sig",
  kty: 'EC',
  crv: crv,
  kid: kid,
  x: Base64.urlsafe_encode64(OpenSSL::BN.new([hex_x].pack('H*'), 2).to_s(2)).gsub(/\n|=/, ''),
  y: Base64.urlsafe_encode64(OpenSSL::BN.new([hex_y].pack('H*'), 2).to_s(2)).gsub(/\n|=/, ''),
}.to_json

puts jwk
